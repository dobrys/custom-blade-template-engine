<?php

function generateRoutesMap(string $baseDir, string $prefix = ''): array
{
    $routes = [];

    $iterator = new RecursiveIteratorIterator(
        new RecursiveDirectoryIterator($baseDir),
        RecursiveIteratorIterator::LEAVES_ONLY
    );

    foreach ($iterator as $file) {
        if ($file->isFile() && $file->getExtension() === 'php') {
            $filePath = $file->getPathname();

            // –ü—Ä–µ–æ–±—Ä–∞–∑—É–≤–∞–º–µ –≤ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª–µ–Ω –ø—ä—Ç –∫—ä–º $baseDir
            $relativePath = str_replace('\\', '/', substr($filePath, strlen($baseDir) + 1));

            // –ü—Ä–µ–º–∞—Ö–≤–∞–º–µ —Ä–∞–∑—à–∏—Ä–µ–Ω–∏–µ—Ç–æ .php
            $routeKey = substr($relativePath, 0, -4); // –±–µ–∑ ".php"

            // –û–ø—Ü–∏–æ–Ω–∞–ª–Ω–æ –¥–æ–±–∞–≤—è–º–µ –ø—Ä–µ—Ñ–∏–∫—Å (–Ω–∞–ø—Ä–∏–º–µ—Ä 'admin/')
            $fullRouteKey = ltrim($prefix . $routeKey, '/');

            // –£–Ω–∏—Ñ–∏—Ü–∏—Ä–∞–º–µ –ø—ä—Ç—è –∫—ä–º —Å–∫—Ä–∏–ø—Ç–∞ —Å '/'
            $normalizedPath = str_replace('\\', '/', $filePath);

            // –°—ä–∑–¥–∞–≤–∞–º–µ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª–µ–Ω –ø—ä—Ç –æ—Ç —Ç–µ–∫—É—â–∞—Ç–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è (__DIR__)
            $relativeScriptPath = '__DIR__ . \'/routes/' . str_replace("'", "\\'", $relativePath) . '\'';

            $routes[$fullRouteKey] = $relativeScriptPath;
        }
    }

    ksort($routes); // –ü–æ–¥—Ä–µ–∂–¥–∞–º–µ –ø–æ –∫–ª—é—á–æ–≤–µ

    return $routes;
}

// üìå –ò–∑–ø–æ–ª–∑–≤–∞–Ω–µ:
$baseDir = __DIR__ . '/../routes';
$routes = generateRoutesMap($baseDir);

// üì¶ –ì–µ–Ω–µ—Ä–∏—Ä–∞–Ω–µ –Ω–∞ PHP –∫–æ–¥ —Å –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª–Ω–∏ –ø—ä—Ç–∏—â–∞:
$output = "<?php\n\n\$routes = [\n";

foreach ($routes as $key => $value) {
    $output .= "    '" . $key . "' => {$value},\n";
}

$output .= "];\n";

// –ó–∞–ø–∏—Å–≤–∞–Ω–µ –≤—ä–≤ —Ñ–∞–π–ª –∏–ª–∏ –¥–∏—Ä–µ–∫—Ç–Ω–æ –∏–∑–≤–µ–∂–¥–∞–Ω–µ:
file_put_contents(__DIR__ . '/routes_map.php', $output);
echo "‚úÖ –§–∞–π–ª—ä—Ç routes_map.php –µ —Å—ä–∑–¥–∞–¥–µ–Ω —É—Å–ø–µ—à–Ω–æ.\n";
